dnl  This can be any file in the package.
AC_INIT(include/simage.h)

dnl *******************************************************************
dnl * Check to see if the compiler supports the ANSI standard, and
dnl * automatically add the necessary options if the compiler defaults
dnl * to K&R C. If no ANSI mode is available, terminate.
dnl *******************************************************************

AC_PROG_CC
AM_PROG_CC_STDC

if test x"$am_cv_prog_cc_stdc" = xno; then
  AC_MSG_ERROR(you need an ANSI compatible C compiler to build simage!)
fi


dnl *******************************************************************
dnl * Library version control.
dnl *******************************************************************

dnl  Making releases:
dnl    SIMAGE_MICRO_VERSION += 1;
dnl    SIMAGE_INTERFACE_AGE += 1;
dnl    SIMAGE_BINARY_AGE += 1;
dnl  if any functions have been added, set SIMAGE_INTERFACE_AGE to 0.
dnl  if backwards compatibility has been broken,
dnl  set SIMAGE_BINARY_AGE _and_ SIMAGE_INTERFACE_AGE to 0.
dnl 
SIMAGE_MAJOR_VERSION=0
SIMAGE_MINOR_VERSION=9
SIMAGE_MICRO_VERSION=0
SIMAGE_INTERFACE_AGE=0
SIMAGE_BINARY_AGE=0
SIMAGE_VERSION=$SIMAGE_MAJOR_VERSION.$SIMAGE_MINOR_VERSION.$SIMAGE_MICRO_VERSION

AC_SUBST(SIMAGE_MAJOR_VERSION)
AC_SUBST(SIMAGE_MINOR_VERSION)
AC_SUBST(SIMAGE_MICRO_VERSION)
AC_SUBST(SIMAGE_VERSION)
AC_SUBST(SIMAGE_INTERFACE_AGE)
AC_SUBST(SIMAGE_BINARY_AGE)

dnl  libtool versioning
LT_RELEASE=$SIMAGE_MAJOR_VERSION.$SIMAGE_MINOR_VERSION
LT_CURRENT=`expr $SIMAGE_MICRO_VERSION - $SIMAGE_INTERFACE_AGE`
LT_REVISION=$SIMAGE_INTERFACE_AGE
LT_AGE=`expr $SIMAGE_BINARY_AGE - $SIMAGE_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$SIMAGE_VERSION


dnl *******************************************************************
dnl * Miscellaneous options and initializations.
dnl *******************************************************************

AM_INIT_AUTOMAKE(libsimage, $VERSION)

dnl  File to cram the configure tests into.
AM_CONFIG_HEADER(config.h)


dnl  Default to not building a static library.
dnl  Can be overridden by the user with --enable-static.
AM_DISABLE_STATIC

dnl  Turn off default maintainer make-rules -- use ./autogen.sh instead.
AM_MAINTAINER_MODE

dnl Initialize libtool
AC_PROG_LIBTOOL


dnl  These are used for constructing the simage-config file.
SIMAGE_EXTRA_CPPFLAGS=
SIMAGE_EXTRA_LDFLAGS=
SIMAGE_EXTRA_LIBS=
AC_SUBST(SIMAGE_EXTRA_CPPFLAGS)
AC_SUBST(SIMAGE_EXTRA_LDFLAGS)
AC_SUBST(SIMAGE_EXTRA_LIBS)


dnl  libtiff and libpng uses math library functions.
AC_CHECK_LIBM
LIBS="$LIBM $LIBS"
SIMAGE_EXTRA_LIBS="$LIBM $SIMAGE_EXTRA_LIBS"


dnl *******************************************************************
dnl * Check if JPEG support is wanted (and if so, available).
dnl *******************************************************************

SIM_CHECK_JPEGLIB([AC_DEFINE(HAVE_JPEGLIB)
                   SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_jpegdev_cppflags"
                   SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_jpegdev_ldflags"
                   SIMAGE_EXTRA_LIBS="$sim_ac_jpegdev_libs $SIMAGE_EXTRA_LIBS"],
                  [AC_MSG_WARN(libjpeg development system not found)])

AM_CONDITIONAL(SIMAGE_JPEG_SUPPORT, test x"$sim_ac_jpegdev_avail" = xyes)



dnl *******************************************************************
dnl * Check if TIFF support is wanted (and if so, available).
dnl *******************************************************************

SIM_CHECK_TIFFLIB([AC_DEFINE(HAVE_TIFFLIB)
                   SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_tiffdev_cppflags"
                   SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_tiffdev_ldflags"
                   SIMAGE_EXTRA_LIBS="$sim_ac_tiffdev_libs $SIMAGE_EXTRA_LIBS"],
                  [AC_MSG_WARN(libtiff development system not found)])

AM_CONDITIONAL(SIMAGE_TIFF_SUPPORT, test x"$sim_ac_tiffdev_avail" = xyes)



dnl *******************************************************************
dnl * Check if PNG support is wanted (and if so, available).
dnl *******************************************************************

simage_ac_pnglib=no

dnl Yep, we can actually check for a negative with_png here, as the
dnl default is "yes" and the user therefore must explicitly specify
dnl if he/she does _not_ want the PNG support.
if ! test x"$with_png" = xno; then
  SIM_CHECK_ZLIB([SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_zlib_cppflags"
                  SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_zlib_ldflags"
                  SIMAGE_EXTRA_LIBS="$sim_ac_zlib_libs $SIMAGE_EXTRA_LIBS"],
                  [AC_MSG_WARN(zlib development system not found)])
  
  if test x"$sim_ac_zlib_avail" = xyes; then
    SIM_CHECK_PNGLIB([simage_ac_pnglib=yes
                      AC_DEFINE(HAVE_PNGLIB)
                      SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_pngdev_cppflags"
                      SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_pngdev_ldflags"
                      SIMAGE_EXTRA_LIBS="$sim_ac_pngdev_libs $SIMAGE_EXTRA_LIBS"],
                     [AC_MSG_WARN(libpng development system not found)])
  else
    AC_MSG_WARN(can't use libpng without zlib)
  fi
fi

AM_CONDITIONAL(SIMAGE_PNG_SUPPORT, test x"$simage_ac_pnglib" = xyes)



dnl *******************************************************************
dnl * Check if Targa support is wanted.
dnl *******************************************************************

AC_ARG_WITH(targa,
        AC_HELP_STRING([--with-targa], [include support for Targa images [default=yes]]),
	[case "${withval}" in
		yes) want_tga=yes ;;
		no)  want_tga=no ;;
		*) AC_MSG_ERROR(bad value \"${withval}\" for --with-targa) ;;
	esac],
	[want_tga=yes])

AM_CONDITIONAL(TGA_SUPPORT, test "x$want_tga" = "xyes")
if test "$want_tga" = yes; then
  AC_DEFINE(SIMAGE_TGA_SUPPORT, 1)
fi


dnl *******************************************************************
dnl * Check if RGB support is wanted.
dnl *******************************************************************

AC_ARG_WITH(rgb,
        AC_HELP_STRING([--with-rgb], [include support for SGI RGB images [default=yes]]),
	[case "${withval}" in
		yes) want_rgb=yes ;;
		no)  want_rgb=no ;;
		*) AC_MSG_ERROR(bad value \"${withval}\" for --with-rgb) ;;
	esac],
	[want_rgb=yes])

AM_CONDITIONAL(RGB_SUPPORT, test "x$want_rgb" = "xyes")
if test "$want_rgb" = yes; then
  AC_DEFINE(SIMAGE_RGB_SUPPORT, 1)
fi


dnl *******************************************************************
dnl * Check if PIC support is wanted.
dnl *******************************************************************

AC_ARG_WITH(pic,
        AC_HELP_STRING([--with-pic], [include support for PIC images [default=yes]]),
	[case "${withval}" in
		yes) want_pic=yes ;;
		no)  want_pic=no ;;
		*) AC_MSG_ERROR(bad value \"${withval}\" for --with-pic) ;;
	esac],
	[want_pic=yes])

AM_CONDITIONAL(PIC_SUPPORT, test "x$want_pic" = "xyes")
if test "$want_pic" = yes; then
  AC_DEFINE(SIMAGE_PIC_SUPPORT, 1)
fi

dnl *******************************************************************
dnl * List all files configure shall generate.
dnl *******************************************************************

AC_OUTPUT([Makefile src/Makefile simage-config],
          [chmod a+x simage-config])
