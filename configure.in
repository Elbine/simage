# **************************************************************************
AC_INIT(src/simage.c)
AC_CONFIG_AUX_DIR(cfg)

# **************************************************************************
# Check the CVS repository setup

sim_ac_cvs_syncproblem=false;

sim_ac_macro_dir=${srcdir}/cfg/m4

if test ! -d $sim_ac_macro_dir; then
  if test "x${with_auto_cvs_update+set}" = "xset"; then
    echo "Trying to honor the --with-auto-cvs-update option."
    sim_ac_save_cwd="`pwd`"
    cd ${srcdir}
    if test -d cfg/m4 -o ! -f ./CVS/Entries; then
      AC_MSG_ERROR([something failed horribly - can't do auto-cvs-update])
    fi
    cvs co simage-macros
    cd ${sim_ac_save_cwd}
    echo "Done.  Proceeding..."
  fi
fi

if test ! -d $sim_ac_macro_dir; then
  cat <<EOF

  You appear to have an old setup of the simage source repository.
  Parts of it have changed structurally, and you need to do the
  following in the simage source directory:

    $ rm -rf conf-macros
    $ cvs co simage-macros

  You can also run configure with the option --with-auto-cvs-update
  to allow the configure script to try to take care of this.  This
  option is a bit experimental - use at your own risk.
EOF
  sim_ac_cvs_syncproblem=true
fi

$sim_ac_cvs_syncproblem && echo "" && echo "Aborting..." && exit 1

# **************************************************************************
# Check to see if the compiler supports the ANSI standard, and
# automatically add the necessary options if the compiler defaults
# to K&R C. If no ANSI mode is available, terminate.

AC_PROG_CC
AM_PROG_CC_STDC

if test x"$am_cv_prog_cc_stdc" = xno; then
  AC_MSG_WARN(doesn't look like you're using an ANSI compatible C compiler)
fi

# **************************************************************************
# Library version control.

# Making releases:
#   SIMAGE_MICRO_VERSION += 1;
#   SIMAGE_INTERFACE_AGE += 1;
#   SIMAGE_BINARY_AGE += 1;
# if any functions have been added, set SIMAGE_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set SIMAGE_BINARY_AGE _and_ SIMAGE_INTERFACE_AGE to 0.

SIMAGE_MAJOR_VERSION=0
SIMAGE_MINOR_VERSION=9
SIMAGE_MICRO_VERSION=0
SIMAGE_INTERFACE_AGE=0
SIMAGE_BINARY_AGE=0
SIMAGE_VERSION=$SIMAGE_MAJOR_VERSION.$SIMAGE_MINOR_VERSION.$SIMAGE_MICRO_VERSION

AC_SUBST(SIMAGE_MAJOR_VERSION)
AC_SUBST(SIMAGE_MINOR_VERSION)
AC_SUBST(SIMAGE_MICRO_VERSION)
AC_SUBST(SIMAGE_VERSION)
AC_SUBST(SIMAGE_INTERFACE_AGE)
AC_SUBST(SIMAGE_BINARY_AGE)

# libtool versioning
LT_RELEASE=$SIMAGE_MAJOR_VERSION.$SIMAGE_MINOR_VERSION
LT_CURRENT=`expr $SIMAGE_MICRO_VERSION - $SIMAGE_INTERFACE_AGE`
LT_REVISION=$SIMAGE_INTERFACE_AGE
LT_AGE=`expr $SIMAGE_BINARY_AGE - $SIMAGE_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$SIMAGE_VERSION

#  These are for include/simage.h.

AC_DEFINE_UNQUOTED(SIMAGE_MAJOR_VERSION, $SIMAGE_MAJOR_VERSION, [define this to the simage major version number])
AC_DEFINE_UNQUOTED(SIMAGE_MINOR_VERSION, $SIMAGE_MINOR_VERSION, [define this to the simage minor version number])
AC_DEFINE_UNQUOTED(SIMAGE_MICRO_VERSION, $SIMAGE_MICRO_VERSION, [define this to the simage release version number])
AC_DEFINE_UNQUOTED(SIMAGE_VERSION, "$SIMAGE_VERSION", [define this to the full simage major.minor.release version number])

# **************************************************************************
# Miscellaneous options and initializations.

AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(libsimage, $VERSION)

# Files to cram the configure tests into.
AM_CONFIG_HEADER(config.h include/simage.h)

# Default to not building a static library.
# Can be overridden by the user with --enable-static.
AM_DISABLE_STATIC

# Turn off default maintainer make-rules -- use ./autogen.sh instead.
AM_MAINTAINER_MODE

# Initialize libtool
AC_PROG_LIBTOOL

# These are used for constructing the simage-config file.
SIMAGE_EXTRA_CPPFLAGS=$CPPFLAGS
SIMAGE_EXTRA_LDFLAGS=$LDFLAGS
SIMAGE_EXTRA_LIBS=$LIBS
AC_SUBST(SIMAGE_EXTRA_CPPFLAGS)
AC_SUBST(SIMAGE_EXTRA_LDFLAGS)
AC_SUBST(SIMAGE_EXTRA_LIBS)

# libtiff and libpng uses math library functions.
SIM_AC_CHECK_MATHLIB(SIMAGE_EXTRA_LIBS="$SIMAGE_EXTRA_LIBS $sim_ac_libm",
                     AC_MSG_ERROR(could not find a way to use math library))

# **************************************************************************
# Check if UNGIF support is wanted (and if so, available).

SIM_AC_HAVE_LIBUNGIF_IFELSE([
  AC_DEFINE(HAVE_UNGIFLIB, 1, [Define to use ungif library])
  SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_libungif_cppflags"
  SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_libungif_ldflags"
  SIMAGE_EXTRA_LIBS="$sim_ac_libungif_libs $SIMAGE_EXTRA_LIBS"
  CPPFLAGS="$CPPFLAGS $sim_ac_libungif_cppflags"
  LDFLAGS="$LDFLAGS $sim_ac_libungif_ldflags"
  LIBS="$sim_ac_libungif_libs $LIBS"
], [
  AC_MSG_WARN(libungif will not be used)
])

AM_CONDITIONAL(SIMAGE_UNGIF_SUPPORT, test x"$sim_ac_have_libungif" = xtrue)

# **************************************************************************
# Check if JPEG support is wanted (and if so, available).

SIM_AC_CHECK_JPEGLIB([
  AC_DEFINE(HAVE_JPEGLIB, 1, [Define to use jpeg library])
  SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_jpegdev_cppflags"
  SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_jpegdev_ldflags"
  SIMAGE_EXTRA_LIBS="$sim_ac_jpegdev_libs $SIMAGE_EXTRA_LIBS"
], [
  AC_MSG_WARN(libjpeg development system not found)
])

AM_CONDITIONAL(SIMAGE_JPEG_SUPPORT, test x"$sim_ac_jpegdev_avail" = xyes)

# **************************************************************************
# Check if TIFF support is wanted (and if so, available).

SIM_AC_CHECK_TIFFLIB([
  AC_DEFINE(HAVE_TIFFLIB, 1, [Define to use tiff library])
  SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_tiffdev_cppflags"
  SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_tiffdev_ldflags"
  SIMAGE_EXTRA_LIBS="$sim_ac_tiffdev_libs $SIMAGE_EXTRA_LIBS"
], [
  AC_MSG_WARN(libtiff development system not found)
])

AM_CONDITIONAL(SIMAGE_TIFF_SUPPORT, test x"$sim_ac_tiffdev_avail" = xyes)


# **************************************************************************
# Check if PNG support is wanted (and if so, available).

simage_ac_pnglib=no

# Yep, we can actually check for a negative with_png here, as the
# default is "yes" and the user therefore must explicitly specify
# if he/she does _not_ want the PNG support.

if test x"$with_png" != xno; then
  SIM_AC_CHECK_ZLIB([
    SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_zlib_cppflags"
    SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_zlib_ldflags"
    SIMAGE_EXTRA_LIBS="$sim_ac_zlib_libs $SIMAGE_EXTRA_LIBS"
  ], [
    AC_MSG_WARN(zlib development system not found)
  ])
  
  if test x"$sim_ac_zlib_avail" = xyes; then
    SIM_AC_CHECK_PNGLIB([
      simage_ac_pnglib=yes
      AC_DEFINE(HAVE_PNGLIB, 1, [Define to use png library])
      SIMAGE_EXTRA_CPPFLAGS="$SIMAGE_EXTRA_CPPFLAGS $sim_ac_pngdev_cppflags"
      SIMAGE_EXTRA_LDFLAGS="$SIMAGE_EXTRA_LDFLAGS $sim_ac_pngdev_ldflags"
      SIMAGE_EXTRA_LIBS="$sim_ac_pngdev_libs $SIMAGE_EXTRA_LIBS"
    ], [
      AC_MSG_WARN(libpng development system not found)
    ])
  else
    AC_MSG_WARN(can't use libpng without zlib)
  fi
fi

AM_CONDITIONAL(SIMAGE_PNG_SUPPORT, test x"$simage_ac_pnglib" = xyes)


# **************************************************************************
# Check if TARGA support is wanted.

AC_ARG_WITH(
  targa,
  AC_HELP_STRING([--with-targa],
                 [include support for Targa images [[default=yes]]]),
	[case "${withval}" in
		yes) want_tga=true ;;
		no)  want_tga=false ;;
		*)   AC_MSG_ERROR(bad value "${withval}" for --with-targa) ;;
	esac],
	[want_tga=true])

AM_CONDITIONAL(TGA_SUPPORT, $want_tga)
if $want_tga; then
  AC_DEFINE(SIMAGE_TGA_SUPPORT, 1, [Define to enable targa support])
fi

# **************************************************************************
# Check if RGB support is wanted.

AC_ARG_WITH(
  rgb,
  AC_HELP_STRING([--with-rgb],
                 [include support for SGI RGB images [[default=yes]]]),
  [case "${withval}" in
    yes) want_rgb=true ;;
    no)  want_rgb=false ;;
    *)   AC_MSG_ERROR(bad value "${withval}" for --with-rgb) ;;
  esac],
  [want_rgb=true])

AM_CONDITIONAL(RGB_SUPPORT, $want_rgb)
if $want_rgb; then
  AC_DEFINE(SIMAGE_RGB_SUPPORT, 1, [Define to enable rgb support])
fi

# **************************************************************************
# Check if PIC support is wanted.

AC_ARG_WITH(
  pic,
  AC_HELP_STRING([--with-pic], [include support for PIC images [[default=yes]]]),
  [case "${withval}" in
      yes) want_pic=true ;;
      no)  want_pic=false ;;
      *)   AC_MSG_ERROR(bad value "${withval}" for --with-pic) ;;
  esac],
  [want_pic=true])

AM_CONDITIONAL(PIC_SUPPORT, $want_pic)
if $want_pic; then
  AC_DEFINE(SIMAGE_PIC_SUPPORT, 1, [Define to enable pic support])
fi

SIM_EXPAND_DIR_VARS

# **************************************************************************
# List all files configure shall generate.

# Set simage_build_dir so we can change simage.dsp
#simage_current_dir=`pwd`
#SIM_AC_DOBACKSLASH(simage_build_dir,$simage_current_dir)
#AC_SUBST(simage_build_dir)

# Set simage_src_dir so we can change simage.dsp
#SIM_AC_DOBACKSLASH(simage_src_dir,$srcdir)
#AC_SUBST(simage_src_dir)

# For the build/simage.spec RPM specification file.
SIM_AC_ISO8601_DATE(simage_configure_date)
AC_SUBST(simage_configure_date)

# **************************************************************************
# Remove redundant options from certain option lists.
# We add the first argument ourselves to shift it off because it's added
# again inside simage-config.in

SIM_AC_UNIQIFY_LIST(SIMAGE_EXTRA_CPPFLAGS, -I$includedir $SIMAGE_EXTRA_CPPFLAGS)
set : $SIMAGE_EXTRA_CPPFLAGS
shift
shift
SIMAGE_EXTRA_CPPFLAGS=$@

SIM_AC_UNIQIFY_LIST(SIMAGE_EXTRA_LDFLAGS, -L$libdir $SIMAGE_EXTRA_LDFLAGS)
set : $SIMAGE_EXTRA_LDFLAGS
shift
shift
SIMAGE_EXTRA_LDFLAGS=$@

# We don't have to do shift magic on these:
SIM_AC_UNIQIFY_LIST(SIMAGE_EXTRA_LIBS, $SIMAGE_EXTRA_LIBS)
SIM_AC_UNIQIFY_LIST(CPPFLAGS, $CPPFLAGS)
SIM_AC_UNIQIFY_LIST(LDFLAGS, $LDFLAGS)
SIM_AC_UNIQIFY_LIST(LIBS, $LIBS)

# **************************************************************************

AC_OUTPUT([
	Makefile
	src/Makefile
	build/simage.spec
	simage-config
], [
	chmod a+x simage-config
])

# **************************************************************************
